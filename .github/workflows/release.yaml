name: Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on tags like v1.0.0, v2.1.3, etc.

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/virtual-business-card

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          # Remove 'v' prefix from tag (v1.0.0 -> 1.0.0)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Full version (1.2.3)
            type=semver,pattern={{version}}
            # Major.Minor (1.2)
            type=semver,pattern={{major}}.{{minor}}
            # Major (1)
            type=semver,pattern={{major}}
            # Latest tag
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./virtual_business_card
          file: ./virtual_business_card/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate release notes
        id: release_notes
        run: |
          cat << EOF > release_notes.md
          ## Docker Images

          Pull this release:
          \`\`\`bash
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          \`\`\`

          ### Available tags:
          - \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}\`
          - \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`

          ### Helm Installation

          Update your \`values.yaml\`:
          \`\`\`yaml
          image:
            repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tag: "${{ steps.version.outputs.version }}"
          \`\`\`

          Then install or upgrade:
          \`\`\`bash
          helm upgrade --install virtual-business-card ./helm/virtual-business-card
          \`\`\`
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release summary
        run: |
          echo "### ðŸŽ‰ Release ${{ steps.version.outputs.tag }} Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** \`${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Images published:**" >> $GITHUB_STEP_SUMMARY
          echo '```'
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
